<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc" xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:task="http://www.springframework.org/schema/task"
	xmlns:jpa="http://www.springframework.org/schema/data/jpa" xmlns:aop="http://www.springframework.org/schema/aop" 
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd
		http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.1.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
		http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-3.1.xsd   
		http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.1.xsd"
	default-lazy-init="true">

	<description>Spring公共配置 </description>
	

	<!-- 使用annotation 自动注册bean, 并保证@Required、@Autowired的属性被注入 -->
	<context:component-scan base-package="skynet.isi">

	</context:component-scan>
	<context:annotation-config />
	
	<!-- Configure the multipart resolver -->
	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<!-- one of the properties available; the maximum file size in bytes -->
		<property name="maxUploadSize" value="5242880" />
	</bean>

	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource">
			<ref bean="dataSource" />
		</property>
		<!-- packagesToScan auto scan package @Entity class -->
		<property name="packagesToScan">
			<list>
				<value>skynet.isi.model</value>
			</list>
		</property>

		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">${hibernate.dialect}</prop>
				<prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
				<prop key="hibernate.format_sql">${hibernate.format_sql}</prop>
				<prop key="hibernate.jdbc.batch_size">${hibernate.jdbc.batch_size}</prop>
				<!-- <prop key="hibernate.hbm2ddl.auto">${hibernate.hbm2ddl}</prop> -->
			</props>
		</property>
	</bean>

	<bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
		<property name="host" value="${mail.host}" />
		<property name="port" value="${mail.port}" />
		<property name="username" value="${mail.username}" />
		<property name="password" value="${mail.password}" />
		<property name="javaMailProperties">
			<props>
				<prop key="mail.smtp.auth">true</prop>
			</props>
		</property>
	</bean>

	<bean id="mailTemplateEngine"
		class="org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer">
		<property name="templateLoaderPath" value="/WEB-INF/classes/template/" />
		<property name="freemarkerSettings">
			<props>
				<prop key="template_update_delay">0</prop>
				<prop key="default_encoding">UTF-8</prop>
				<prop key="locale">zh_CN</prop>
			</props>
		</property>
	</bean>

	<!-- 事务配置 -->
	<bean id="transactionManager"
		class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory">
			<ref local="sessionFactory" />
		</property>
	</bean>

	<!-- 使用annotation定义事务 -->
	<tx:annotation-driven transaction-manager="transactionManager"
		proxy-target-class="true" />

	<task:annotation-driven />

	<beans profile="production">
		<!-- 定义受环境影响易变的变量 -->
		<bean
			class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
			<property name="systemPropertiesModeName" value="SYSTEM_PROPERTIES_MODE_OVERRIDE" />
			<property name="ignoreResourceNotFound" value="true" />
			<property name="locations">
				<list>
					<!-- 标准配置 -->
					<value>classpath*:/application.properties</value>
				</list>
			</property>
		</bean>

		<!-- 数据源配置,使用应用内的DBCP数据库连接池 -->
		<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
			destroy-method="close" lazy-init="false">
			<!-- Connection Info -->
			<property name="driverClassName" value="${jdbc.driver}" />
			<property name="url" value="${jdbc.url}" />
			<property name="username" value="${jdbc.username}" />
			<property name="password" value="${jdbc.password}" />

			<!-- Connection Pooling Info -->
			<property name="maxIdle" value="${dbcp.maxIdle}" />
			<property name="maxActive" value="${dbcp.maxActive}" />
			<property name="defaultAutoCommit" value="false" />
			<property name="timeBetweenEvictionRunsMillis" value="3600000" />
			<property name="minEvictableIdleTimeMillis" value="3600000" />
		</bean>
		
		
<!-- 
		<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
			<property name="realm" ref="authRealm" />
		</bean>

		<bean id="authRealm" class="skynet.isi.auth.AuthRealm" />

		<bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor" />

		<bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator" depends-on="lifecycleBeanPostProcessor"/>
			
		<bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
			<property name="securityManager" ref="securityManager"/>
		</bean>

		<bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
			<property name="securityManager" ref="securityManager" />
			<property name="loginUrl" value="/frontend/showLogin" />
			<property name="successUrl" value="/frontend/showIndex" />
			<property name="unauthorizedUrl" value="/frontend/showLogin" />
			<property name="filterChainDefinitions">
				<value>
					/image/** = anon
					/login_files/** = anon
					/frontend/showLogin = anon
					/frontend/login = anon
					/info/** = anon
					/** = authc
				</value>
			</property>
		</bean>
		
		<bean id="adminFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
			<property name="securityManager" ref="securityManager" />
			<property name="loginUrl" value="/admin/showAdminLogin" />
			<property name="successUrl" value="/admin/showAdminIndex" />
			<property name="unauthorizedUrl" value="/admin/showAdminLogin" />
			<property name="filterChainDefinitions">
				<value>
					/image/** = anon
					/login_files/** = anon
					/admin/showAdminLogin = anon
					/admin/adminLogin = anon
					/info/** = anon
					/** = authc
				</value>
			</property>
		</bean>
 -->
		<!-- 数据源配置,使用应用服务器的数据库连接池 -->
		<!--<jee:jndi-lookup id="dataSource" jndi-name="java:comp/env/jdbc/ExampleDB" 
			/> -->
	</beans>

	<beans profile="test">
		<bean
			class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
			<property name="systemPropertiesModeName" value="SYSTEM_PROPERTIES_MODE_OVERRIDE" />
			<property name="ignoreResourceNotFound" value="true" />
			<property name="locations">
				<list>
					<!-- 标准配置 -->
					<value>classpath*:/application.properties</value>
					<!-- 测试环境配置 -->
					<value>classpath*:/application.test.properties</value>
				</list>
			</property>
		</bean>



		<!-- 非Pool的简单data source -->
		<bean id="dataSource"
			class="org.springframework.jdbc.datasource.DriverManagerDataSource">
			<property name="driverClassName" value="${jdbc.driver}" />
			<property name="url" value="${jdbc.url}" />
			<property name="username" value="${jdbc.username}" />
			<property name="password" value="${jdbc.password}" />
		</bean>

		<!-- <bean class="skynet.isi.SpringContextHolder" lazy-init="false" /> 
			<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager"> 
			<property name="realm" ref="authRealm" /> </bean> <bean id="authRealm" class="skynet.isi.auth.AuthRealm" 
			/> <bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean"> 
			<property name="securityManager" ref="securityManager" /> <property name="loginUrl" 
			value="/login" /> <property name="successUrl" value="/user/list" /> <property 
			name="unauthorizedUrl" value="/login" /> <property name="filterChainDefinitions"> 
			<value> /login = anon /user/** = authc /role/edit/* = perms[role:edit] /role/save 
			= perms[role:edit] /role/list = perms[role:view] /** = authc </value> </property> 
			</bean> -->
		<!-- 初始化数据结构 -->
		<!-- <jdbc:initialize-database data-source="dataSource" ignore-failures="ALL"> -->
		<!-- <jdbc:script location="classpath:sql/h2/schema.sql" /> -->
		<!-- </jdbc:initialize-database> -->

		<!-- 以静态变量保存ApplicationContext -->

	</beans>

</beans>